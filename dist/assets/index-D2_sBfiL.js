import{B as tt}from"./bn-pPIJBmSO.js";const lt=(r,t=4,i=6)=>{if(r)return r.slice(0,t)+"..."+r.slice(r.length-i)},rt="logger/5.7.0";let k=!1,L=!1;const _={debug:1,default:2,info:2,warning:3,error:4,off:5};let $=_.default,F=null;function it(){try{const r=[];if(["NFD","NFC","NFKD","NFKC"].forEach(t=>{try{if("test".normalize(t)!=="test")throw new Error("bad normalize")}catch{r.push(t)}}),r.length)throw new Error("missing "+r.join(", "));if("é".normalize("NFD")!=="é")throw new Error("broken implementation")}catch(r){return r.message}return null}const H=it();var C;(function(r){r.DEBUG="DEBUG",r.INFO="INFO",r.WARNING="WARNING",r.ERROR="ERROR",r.OFF="OFF"})(C||(C={}));var E;(function(r){r.UNKNOWN_ERROR="UNKNOWN_ERROR",r.NOT_IMPLEMENTED="NOT_IMPLEMENTED",r.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",r.NETWORK_ERROR="NETWORK_ERROR",r.SERVER_ERROR="SERVER_ERROR",r.TIMEOUT="TIMEOUT",r.BUFFER_OVERRUN="BUFFER_OVERRUN",r.NUMERIC_FAULT="NUMERIC_FAULT",r.MISSING_NEW="MISSING_NEW",r.INVALID_ARGUMENT="INVALID_ARGUMENT",r.MISSING_ARGUMENT="MISSING_ARGUMENT",r.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",r.CALL_EXCEPTION="CALL_EXCEPTION",r.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",r.NONCE_EXPIRED="NONCE_EXPIRED",r.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",r.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",r.TRANSACTION_REPLACED="TRANSACTION_REPLACED",r.ACTION_REJECTED="ACTION_REJECTED"})(E||(E={}));const z="0123456789abcdef";class s{constructor(t){Object.defineProperty(this,"version",{enumerable:!0,value:t,writable:!1})}_log(t,i){const n=t.toLowerCase();_[n]==null&&this.throwArgumentError("invalid log level name","logLevel",t),!($>_[n])&&console.log.apply(console,i)}debug(...t){this._log(s.levels.DEBUG,t)}info(...t){this._log(s.levels.INFO,t)}warn(...t){this._log(s.levels.WARNING,t)}makeError(t,i,n){if(L)return this.makeError("censored error",i,{});i||(i=s.errors.UNKNOWN_ERROR),n||(n={});const e=[];Object.keys(n).forEach(a=>{const d=n[a];try{if(d instanceof Uint8Array){let T="";for(let O=0;O<d.length;O++)T+=z[d[O]>>4],T+=z[d[O]&15];e.push(a+"=Uint8Array(0x"+T+")")}else e.push(a+"="+JSON.stringify(d))}catch{e.push(a+"="+JSON.stringify(n[a].toString()))}}),e.push(`code=${i}`),e.push(`version=${this.version}`);const h=t;let f="";switch(i){case E.NUMERIC_FAULT:{f="NUMERIC_FAULT";const a=t;switch(a){case"overflow":case"underflow":case"division-by-zero":f+="-"+a;break;case"negative-power":case"negative-width":f+="-unsupported";break;case"unbound-bitwise-result":f+="-unbound-result";break}break}case E.CALL_EXCEPTION:case E.INSUFFICIENT_FUNDS:case E.MISSING_NEW:case E.NONCE_EXPIRED:case E.REPLACEMENT_UNDERPRICED:case E.TRANSACTION_REPLACED:case E.UNPREDICTABLE_GAS_LIMIT:f=i;break}f&&(t+=" [ See: https://links.ethers.org/v5-errors-"+f+" ]"),e.length&&(t+=" ("+e.join(", ")+")");const w=new Error(t);return w.reason=h,w.code=i,Object.keys(n).forEach(function(a){w[a]=n[a]}),w}throwError(t,i,n){throw this.makeError(t,i,n)}throwArgumentError(t,i,n){return this.throwError(t,s.errors.INVALID_ARGUMENT,{argument:i,value:n})}assert(t,i,n,e){t||this.throwError(i,n,e)}assertArgument(t,i,n,e){t||this.throwArgumentError(i,n,e)}checkNormalize(t){H&&this.throwError("platform missing String.prototype.normalize",s.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:H})}checkSafeUint53(t,i){typeof t=="number"&&(i==null&&(i="value not safe"),(t<0||t>=9007199254740991)&&this.throwError(i,s.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:t}),t%1&&this.throwError(i,s.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:t}))}checkArgumentCount(t,i,n){n?n=": "+n:n="",t<i&&this.throwError("missing argument"+n,s.errors.MISSING_ARGUMENT,{count:t,expectedCount:i}),t>i&&this.throwError("too many arguments"+n,s.errors.UNEXPECTED_ARGUMENT,{count:t,expectedCount:i})}checkNew(t,i){(t===Object||t==null)&&this.throwError("missing new",s.errors.MISSING_NEW,{name:i.name})}checkAbstract(t,i){t===i?this.throwError("cannot instantiate abstract class "+JSON.stringify(i.name)+" directly; use a sub-class",s.errors.UNSUPPORTED_OPERATION,{name:t.name,operation:"new"}):(t===Object||t==null)&&this.throwError("missing new",s.errors.MISSING_NEW,{name:i.name})}static globalLogger(){return F||(F=new s(rt)),F}static setCensorship(t,i){if(!t&&i&&this.globalLogger().throwError("cannot permanently disable censorship",s.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),k){if(!t)return;this.globalLogger().throwError("error censorship permanent",s.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}L=!!t,k=!!i}static setLogLevel(t){const i=_[t.toLowerCase()];if(i==null){s.globalLogger().warn("invalid log level - "+t);return}$=i}static from(t){return new s(t)}}s.errors=E;s.levels=C;const nt="bytes/5.7.0",b=new s(nt);function J(r){return!!r.toHexString}function y(r){return r.slice||(r.slice=function(){const t=Array.prototype.slice.call(arguments);return y(new Uint8Array(Array.prototype.slice.apply(r,t)))}),r}function V(r){return typeof r=="number"&&r==r&&r%1===0}function I(r){if(r==null)return!1;if(r.constructor===Uint8Array)return!0;if(typeof r=="string"||!V(r.length)||r.length<0)return!1;for(let t=0;t<r.length;t++){const i=r[t];if(!V(i)||i<0||i>=256)return!1}return!0}function et(r,t){if(t||(t={}),typeof r=="number"){b.checkSafeUint53(r,"invalid arrayify value");const i=[];for(;r;)i.unshift(r&255),r=parseInt(String(r/256));return i.length===0&&i.push(0),y(new Uint8Array(i))}if(t.allowMissingPrefix&&typeof r=="string"&&r.substring(0,2)!=="0x"&&(r="0x"+r),J(r)&&(r=r.toHexString()),p(r)){let i=r.substring(2);i.length%2&&(t.hexPad==="left"?i="0"+i:t.hexPad==="right"?i+="0":b.throwArgumentError("hex data is odd-length","value",r));const n=[];for(let e=0;e<i.length;e+=2)n.push(parseInt(i.substring(e,e+2),16));return y(new Uint8Array(n))}return I(r)?y(new Uint8Array(r)):b.throwArgumentError("invalid arrayify value","value",r)}function p(r,t){return!(typeof r!="string"||!r.match(/^0x[0-9A-Fa-f]*$/))}const D="0123456789abcdef";function Z(r,t){if(t||(t={}),typeof r=="number"){b.checkSafeUint53(r,"invalid hexlify value");let i="";for(;r;)i=D[r&15]+i,r=Math.floor(r/16);return i.length?(i.length%2&&(i="0"+i),"0x"+i):"0x00"}if(typeof r=="bigint")return r=r.toString(16),r.length%2?"0x0"+r:"0x"+r;if(t.allowMissingPrefix&&typeof r=="string"&&r.substring(0,2)!=="0x"&&(r="0x"+r),J(r))return r.toHexString();if(p(r))return r.length%2&&(t.hexPad==="left"?r="0x0"+r.substring(2):t.hexPad==="right"?r+="0":b.throwArgumentError("hex data is odd-length","value",r)),r.toLowerCase();if(I(r)){let i="0x";for(let n=0;n<r.length;n++){let e=r[n];i+=D[(e&240)>>4]+D[e&15]}return i}return b.throwArgumentError("invalid hexlify value","value",r)}function W(r,t){for(typeof r!="string"?r=Z(r):p(r)||b.throwArgumentError("invalid hex string","value",r),r.length>2*t+2&&b.throwArgumentError("value out of range","value",arguments[1]);r.length<2*t+2;)r="0x0"+r.substring(2);return r}const q="bignumber/5.7.0";var G=tt.BN;const x=new s(q),M={},X=9007199254740991;function ot(r){return r!=null&&(c.isBigNumber(r)||typeof r=="number"&&r%1===0||typeof r=="string"&&!!r.match(/^-?[0-9]+$/)||p(r)||typeof r=="bigint"||I(r))}let j=!1;class c{constructor(t,i){t!==M&&x.throwError("cannot call constructor directly; use BigNumber.from",s.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=i,this._isBigNumber=!0,Object.freeze(this)}fromTwos(t){return g(o(this).fromTwos(t))}toTwos(t){return g(o(this).toTwos(t))}abs(){return this._hex[0]==="-"?c.from(this._hex.substring(1)):this}add(t){return g(o(this).add(o(t)))}sub(t){return g(o(this).sub(o(t)))}div(t){return c.from(t).isZero()&&m("division-by-zero","div"),g(o(this).div(o(t)))}mul(t){return g(o(this).mul(o(t)))}mod(t){const i=o(t);return i.isNeg()&&m("division-by-zero","mod"),g(o(this).umod(i))}pow(t){const i=o(t);return i.isNeg()&&m("negative-power","pow"),g(o(this).pow(i))}and(t){const i=o(t);return(this.isNegative()||i.isNeg())&&m("unbound-bitwise-result","and"),g(o(this).and(i))}or(t){const i=o(t);return(this.isNegative()||i.isNeg())&&m("unbound-bitwise-result","or"),g(o(this).or(i))}xor(t){const i=o(t);return(this.isNegative()||i.isNeg())&&m("unbound-bitwise-result","xor"),g(o(this).xor(i))}mask(t){return(this.isNegative()||t<0)&&m("negative-width","mask"),g(o(this).maskn(t))}shl(t){return(this.isNegative()||t<0)&&m("negative-width","shl"),g(o(this).shln(t))}shr(t){return(this.isNegative()||t<0)&&m("negative-width","shr"),g(o(this).shrn(t))}eq(t){return o(this).eq(o(t))}lt(t){return o(this).lt(o(t))}lte(t){return o(this).lte(o(t))}gt(t){return o(this).gt(o(t))}gte(t){return o(this).gte(o(t))}isNegative(){return this._hex[0]==="-"}isZero(){return o(this).isZero()}toNumber(){try{return o(this).toNumber()}catch{m("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch{}return x.throwError("this platform does not support BigInt",s.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(arguments[0]===10?j||(j=!0,x.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):arguments[0]===16?x.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",s.errors.UNEXPECTED_ARGUMENT,{}):x.throwError("BigNumber.toString does not accept parameters",s.errors.UNEXPECTED_ARGUMENT,{})),o(this).toString(10)}toHexString(){return this._hex}toJSON(t){return{type:"BigNumber",hex:this.toHexString()}}static from(t){if(t instanceof c)return t;if(typeof t=="string")return t.match(/^-?0x[0-9a-f]+$/i)?new c(M,S(t)):t.match(/^-?[0-9]+$/)?new c(M,S(new G(t))):x.throwArgumentError("invalid BigNumber string","value",t);if(typeof t=="number")return t%1&&m("underflow","BigNumber.from",t),(t>=X||t<=-X)&&m("overflow","BigNumber.from",t),c.from(String(t));const i=t;if(typeof i=="bigint")return c.from(i.toString());if(I(i))return c.from(Z(i));if(i)if(i.toHexString){const n=i.toHexString();if(typeof n=="string")return c.from(n)}else{let n=i._hex;if(n==null&&i.type==="BigNumber"&&(n=i.hex),typeof n=="string"&&(p(n)||n[0]==="-"&&p(n.substring(1))))return c.from(n)}return x.throwArgumentError("invalid BigNumber value","value",t)}static isBigNumber(t){return!!(t&&t._isBigNumber)}}function S(r){if(typeof r!="string")return S(r.toString(16));if(r[0]==="-")return r=r.substring(1),r[0]==="-"&&x.throwArgumentError("invalid hex","value",r),r=S(r),r==="0x00"?r:"-"+r;if(r.substring(0,2)!=="0x"&&(r="0x"+r),r==="0x")return"0x00";for(r.length%2&&(r="0x0"+r.substring(2));r.length>4&&r.substring(0,4)==="0x00";)r="0x"+r.substring(4);return r}function g(r){return c.from(S(r))}function o(r){const t=c.from(r).toHexString();return t[0]==="-"?new G("-"+t.substring(3),16):new G(t.substring(2),16)}function m(r,t,i){const n={fault:r,operation:t};return i!=null&&(n.value=i),x.throwError(r,s.errors.NUMERIC_FAULT,n)}const l=new s(q),A={},Q=c.from(0),Y=c.from(-1);function v(r,t,i,n){const e={fault:t,operation:i};return n!==void 0&&(e.value=n),l.throwError(r,s.errors.NUMERIC_FAULT,e)}let U="0";for(;U.length<256;)U+=U;function B(r){if(typeof r!="number")try{r=c.from(r).toNumber()}catch{}return typeof r=="number"&&r>=0&&r<=256&&!(r%1)?"1"+U.substring(0,r):l.throwArgumentError("invalid decimal size","decimals",r)}function P(r,t){t==null&&(t=0);const i=B(t);r=c.from(r);const n=r.lt(Q);n&&(r=r.mul(Y));let e=r.mod(i).toString();for(;e.length<i.length-1;)e="0"+e;e=e.match(/^([0-9]*[1-9]|0)(0*)/)[1];const h=r.div(i).toString();return i.length===1?r=h:r=h+"."+e,n&&(r="-"+r),r}function N(r,t){t==null&&(t=0);const i=B(t);(typeof r!="string"||!r.match(/^-?[0-9.]+$/))&&l.throwArgumentError("invalid decimal value","value",r);const n=r.substring(0,1)==="-";n&&(r=r.substring(1)),r==="."&&l.throwArgumentError("missing value","value",r);const e=r.split(".");e.length>2&&l.throwArgumentError("too many decimal points","value",r);let h=e[0],f=e[1];for(h||(h="0"),f||(f="0");f[f.length-1]==="0";)f=f.substring(0,f.length-1);for(f.length>i.length-1&&v("fractional component exceeds decimals","underflow","parseFixed"),f===""&&(f="0");f.length<i.length-1;)f+="0";const w=c.from(h),a=c.from(f);let d=w.mul(i).add(a);return n&&(d=d.mul(Y)),d}class R{constructor(t,i,n,e){t!==A&&l.throwError("cannot use FixedFormat constructor; use FixedFormat.from",s.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=i,this.width=n,this.decimals=e,this.name=(i?"":"u")+"fixed"+String(n)+"x"+String(e),this._multiplier=B(e),Object.freeze(this)}static from(t){if(t instanceof R)return t;typeof t=="number"&&(t=`fixed128x${t}`);let i=!0,n=128,e=18;if(typeof t=="string"){if(t!=="fixed")if(t==="ufixed")i=!1;else{const h=t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);h||l.throwArgumentError("invalid fixed format","format",t),i=h[1]!=="u",n=parseInt(h[2]),e=parseInt(h[3])}}else if(t){const h=(f,w,a)=>t[f]==null?a:(typeof t[f]!==w&&l.throwArgumentError("invalid fixed format ("+f+" not "+w+")","format."+f,t[f]),t[f]);i=h("signed","boolean",i),n=h("width","number",n),e=h("decimals","number",e)}return n%8&&l.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",n),e>80&&l.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",e),new R(A,i,n,e)}}class u{constructor(t,i,n,e){t!==A&&l.throwError("cannot use FixedNumber constructor; use FixedNumber.from",s.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=e,this._hex=i,this._value=n,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(t){this.format.name!==t.format.name&&l.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",t)}addUnsafe(t){this._checkFormat(t);const i=N(this._value,this.format.decimals),n=N(t._value,t.format.decimals);return u.fromValue(i.add(n),this.format.decimals,this.format)}subUnsafe(t){this._checkFormat(t);const i=N(this._value,this.format.decimals),n=N(t._value,t.format.decimals);return u.fromValue(i.sub(n),this.format.decimals,this.format)}mulUnsafe(t){this._checkFormat(t);const i=N(this._value,this.format.decimals),n=N(t._value,t.format.decimals);return u.fromValue(i.mul(n).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(t){this._checkFormat(t);const i=N(this._value,this.format.decimals),n=N(t._value,t.format.decimals);return u.fromValue(i.mul(this.format._multiplier).div(n),this.format.decimals,this.format)}floor(){const t=this.toString().split(".");t.length===1&&t.push("0");let i=u.from(t[0],this.format);const n=!t[1].match(/^(0*)$/);return this.isNegative()&&n&&(i=i.subUnsafe(K.toFormat(i.format))),i}ceiling(){const t=this.toString().split(".");t.length===1&&t.push("0");let i=u.from(t[0],this.format);const n=!t[1].match(/^(0*)$/);return!this.isNegative()&&n&&(i=i.addUnsafe(K.toFormat(i.format))),i}round(t){t==null&&(t=0);const i=this.toString().split(".");if(i.length===1&&i.push("0"),(t<0||t>80||t%1)&&l.throwArgumentError("invalid decimal count","decimals",t),i[1].length<=t)return this;const n=u.from("1"+U.substring(0,t),this.format),e=st.toFormat(this.format);return this.mulUnsafe(n).addUnsafe(e).floor().divUnsafe(n)}isZero(){return this._value==="0.0"||this._value==="0"}isNegative(){return this._value[0]==="-"}toString(){return this._value}toHexString(t){if(t==null)return this._hex;t%8&&l.throwArgumentError("invalid byte width","width",t);const i=c.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();return W(i,t/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(t){return u.fromString(this._value,t)}static fromValue(t,i,n){return n==null&&i!=null&&!ot(i)&&(n=i,i=null),i==null&&(i=0),n==null&&(n="fixed"),u.fromString(P(t,i),R.from(n))}static fromString(t,i){i==null&&(i="fixed");const n=R.from(i),e=N(t,n.decimals);!n.signed&&e.lt(Q)&&v("unsigned value cannot be negative","overflow","value",t);let h=null;n.signed?h=e.toTwos(n.width).toHexString():(h=e.toHexString(),h=W(h,n.width/8));const f=P(e,n.decimals);return new u(A,h,f,n)}static fromBytes(t,i){i==null&&(i="fixed");const n=R.from(i);if(et(t).length>n.width/8)throw new Error("overflow");let e=c.from(t);n.signed&&(e=e.fromTwos(n.width));const h=e.toTwos((n.signed?0:1)+n.width).toHexString(),f=P(e,n.decimals);return new u(A,h,f,n)}static from(t,i){if(typeof t=="string")return u.fromString(t,i);if(I(t))return u.fromBytes(t,i);try{return u.fromValue(t,0,i)}catch(n){if(n.code!==s.errors.INVALID_ARGUMENT)throw n}return l.throwArgumentError("invalid FixedNumber value","value",t)}static isFixedNumber(t){return!!(t&&t._isFixedNumber)}}const K=u.from(1),st=u.from("0.5"),ft="units/5.7.0",ht=new s(ft),ct=["wei","kwei","mwei","gwei","szabo","finney","ether"];function gt(r,t){if(typeof t=="string"){const i=ct.indexOf(t);i!==-1&&(t=3*i)}return P(r,t??18)}function ut(r,t){return typeof r!="string"&&ht.throwArgumentError("value must be a string","value",r),N(r,t)}function mt(r){return ut(r,18)}export{lt as a,gt as f,mt as p};
